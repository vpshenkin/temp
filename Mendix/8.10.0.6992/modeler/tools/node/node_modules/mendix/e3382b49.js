import{K as fromRequest$,m as loading,O as withSideEffect$,k as fromComputation$,S as scheduleSideEffect,C as readUntracked,T as liftL}from"./2252f97c.js";import{t as toObjectItem}from"./dc685e13.js";import{w as withObjectKeeping$}from"./194b06f4.js";import{a as asReloadableListValue$,w as withPageInfoSharing$,o as objectListTrigger,g as getDelayedPageSetters,b as getImmediatePageSetters}from"./dd6506a6.js";function getClientPagedList$(config,store,widgetId,parameters$,fetch){const{fetchTrigger$:fetchTrigger$,page$:page$,silentlyResetOffset:silentlyResetOffset}=objectListTrigger(config,store,widgetId,parameters$),fetchResult$=fromRequest$("Load data of "+widgetId,()=>{const trigger=fetchTrigger$.dependOn();return trigger.load?fetch(trigger.parameters):loading()}),objects$=withObjectKeeping$(widgetId,fetchResult$,x=>x.map(o=>o.getGuid())),[,setAllGuids]=store.useSlot(widgetId,"allGuids"),objectsWithSharing$=withSideEffect$("Store all guids of "+widgetId,objects$,liftL(objects=>setAllGuids(objects.map(o=>o.getGuid()))),()=>setAllGuids(void 0)),delayedPageSetters=getDelayedPageSetters(store,widgetId),immediatePageSetters=getImmediatePageSetters(store,widgetId),listValue$=fromComputation$("Paged data of "+widgetId,()=>{const objects=objectsWithSharing$.dependOn();switch(objects.status){case"loading":return Object.assign(Object.assign({status:"loading"},readUntracked(page$)),immediatePageSetters);case"unavailable":return Object.assign(Object.assign({status:"unavailable"},page$.dependOn()),immediatePageSetters);case"available":let{offset:offset,limit:limit}=page$.dependOn();return offset>=objects.value.length&&(offset=0,scheduleSideEffect(silentlyResetOffset)),Object.assign({status:"available",offset:offset,limit:limit,items:objects.value.slice(offset,offset+limit).map(toObjectItem),totalCount:objects.value.length,hasMoreItems:offset+limit<objects.value.length},delayedPageSetters)}});return asReloadableListValue$(withPageInfoSharing$(listValue$,store,widgetId))}export{getClientPagedList$ as g};
