import{k as fromComputation$,N as asDynamicValue$,f as available,m as loading,u as unavailable}from"./2252f97c.js";import"react";import{e as ensure,r as toFriendlyId}from"./e81b9882.js";import{c as asProperty}from"./0ad2390d.js";import{p as pageScope,g as getFormExpressionResult$,E as EmptyVariableAccessError,A as AccessDeniedError}from"./0b2c9cb2.js";import"./3cf8690e.js";import"./0e7164f2.js";import"big.js";import"./11de92d0.js";import"./e4677d80.js";import"./d1a3b52a.js";import"./275ae0e7.js";const ExpressionProperty=asProperty((config,store,widgetId)=>{const[form$]=store.useSlot(pageScope,"form"),pageTitle$=fromComputation$("Form page title of "+widgetId,()=>ensure(form$.dependOn())[0].getTitle()),attribute$=getFormExpressionResult$(config.expression,store,"Value of "+widgetId,{pageTitle:pageTitle$});return asDynamicValue$(fromComputation$("Expression property result for "+widgetId,()=>{try{return available(attribute$.dependOn())}catch(e){return e instanceof EmptyVariableAccessError||e instanceof AccessDeniedError?loading():(function(widgetId,e){mx.onError(new Error(`An error occurred while evaluating expression in ${toFriendlyId(widgetId)}: ${e.message}`))}(widgetId,e),unavailable())}}))});export{ExpressionProperty};
