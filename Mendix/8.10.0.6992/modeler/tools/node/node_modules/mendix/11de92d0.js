let languageIndex=0,translations={};function selectTranslation(translationTexts){return translationTexts[languageIndex]}function updateActiveLanguageIndex(languageCodes,activeLanguageCode){const activeLanguageIndex=languageCodes.indexOf(activeLanguageCode);languageIndex=activeLanguageIndex>-1?activeLanguageIndex:0}function setSystemTexts(systemTexts){translations=systemTexts}function translate(namespace,messageKey,...args){const translation=translations[`${namespace}.${messageKey}`];return translation?selectTranslation(translation).replace(/\{(\d+)\}/g,(match,n)=>args.length>=n?args[n-1]:match):"[No translation]"}export{selectTranslation as a,setSystemTexts as s,translate as t,updateActiveLanguageIndex as u};
