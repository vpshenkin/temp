import{k as fromComputation$,v as fromConstant$,f as available,m as loading,w as mapL,h as getOrElseL}from"./2252f97c.js";import{m as mapValues,j as crash}from"./e81b9882.js";import{a as DescribedError}from"./e4677d80.js";import{f as fetchObjects$,M as MxObject1}from"./61ebc708.js";class ValidationError extends Error{constructor(original={}){super(),this.original=original,Object.setPrototypeOf(this,ValidationError.prototype)}}function getActionParameters$(argMap,store,predefinedArguments){const params$=mapValues(argMap,({source:source,widget:widget})=>{var _a;const sourceMap=null!==(_a=null==predefinedArguments?void 0:predefinedArguments[widget])&&void 0!==_a?_a:{};return source in sourceMap?fromConstant$(available(sourceMap[source])):function(store,source,widget){const[state$]=store.useSlot(widget,"allpages"===source?"allGuids":source);return fromComputation$(`Load ${source} of ${widget}`,()=>{const state=state$.dependOn();if(void 0===state)return"selection"===source?available({objects:[]}):loading();if(Array.isArray(state)){const objects=mapL(fetchObjects$(state),objs=>objs.map(o=>o.old()));return available({objects:getOrElseL(objects,[])})}return mapL(MxObject1.fromState$(state),obj=>({object:obj.old()}))})}(store,source,widget)});return fromComputation$("Load action parameters",()=>mapValues(params$,p$=>p$.dependOn()))}function toMicroflowParameters(parameters){const result={};return Object.keys(parameters).forEach(name=>{const value=parameters[name];value&&(result[name]="objects"in value?{guids:value.objects.map(mxobj=>mxobj.getGuid())}:"object"in value?{guid:value.object.getGuid()}:value)}),result}function toNanoflowArguments(parameters){const result=[];return Object.keys(parameters).forEach(name=>{const value=parameters[name];result.push({name:name,value:void 0!==value?"object"in value?value.object:crash():void 0})}),result}function getGuidsFromMicroflowArguments(mfArgs){const mfGuids=[];return Object.values(mfArgs).forEach(mfParam=>{"guid"in mfParam?mfGuids.push(mfParam.guid):"guids"in mfParam&&mfGuids.push(...mfParam.guids)}),mfGuids}class DanglingError extends DescribedError{constructor(message){super(message),Object.setPrototypeOf(this,DanglingError.prototype)}}export{DanglingError as D,ValidationError as V,toNanoflowArguments as a,getActionParameters$ as b,getGuidsFromMicroflowArguments as g,toMicroflowParameters as t};
