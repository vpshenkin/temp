import{f as available,u as unavailable}from"./2252f97c.js";import"react";import{r as toFriendlyId}from"./e81b9882.js";import{c as asProperty}from"./0ad2390d.js";import"./3cf8690e.js";import"./0e7164f2.js";import"big.js";import"./e4677d80.js";import"./449717b5.js";import"./dc685e13.js";import"./194b06f4.js";import{f as fromObjectProperty$}from"./006f2130.js";import{g as getMicroflowArguments$}from"./5f469b1e.js";const MicroflowObjectProperty=asProperty((config,store,widgetId)=>{const friendlyId=toFriendlyId(widgetId);return fromObjectProperty$(config.scope,store,widgetId,getMicroflowArguments$(config.argMap,store,"data source of "+widgetId),async args=>{try{!function(args){mx.logger.debug(`Fetching object using microflow '${config.microflow}' for widget ${friendlyId}`,"parameter mapping:",args)}(args);const result=await mx.onlineData.retrieveByMicroflow(config.microflow,config.queryId,args);return function(mxObject,extra){const guid=null==mxObject?void 0:mxObject.getGuid();mx.logger.debug(guid?`Received object '${guid}' and ${extra.length} objects over schema for widget ${friendlyId}`:"Received no object for widget "+friendlyId,"extra ids",extra.map(o=>o.getGuid()))}(result.objects[0],result.extra),result.objects.length?available(result.objects[0]):unavailable()}catch(e){return function(widgetId,e){mx.onError(new Error(`An error occurred while executing object data source microflow for widget ${toFriendlyId(widgetId)}: ${e.message}`))}(widgetId,e),unavailable()}})});export{MicroflowObjectProperty};
