import{N as asDynamicValue$,K as fromRequest$,f as available}from"./2252f97c.js";import"react";import"./e81b9882.js";import{c as asProperty}from"./0ad2390d.js";import"./3cf8690e.js";import"./0e7164f2.js";import"big.js";import"./e4677d80.js";import"./449717b5.js";import"./dc685e13.js";import"./194b06f4.js";import"./006f2130.js";import{g as getDocumentPath$}from"./3c4fc3d1.js";const DynamicImageProperty=(fetchFn=path=>Promise.resolve(path),needsAccessToChangedDate=!0,asProperty(({scope:scope,path:path,showAsThumbnail:showAsThumbnail},store,widgetId,propertyPath)=>{const path$=getDocumentPath$(`Image path of ${widgetId}/${propertyPath}`,scope,path,store,widgetId,needsAccessToChangedDate,showAsThumbnail);return asDynamicValue$(fromRequest$(`Fetch an image for ${widgetId}/${propertyPath}`,()=>{const loadablePath=path$.dependOn();return"available"!==loadablePath.status?loadablePath:fetchFn(loadablePath.value).then(uri=>available({uri:uri}))}))}));var fetchFn,needsAccessToChangedDate;export{DynamicImageProperty};
