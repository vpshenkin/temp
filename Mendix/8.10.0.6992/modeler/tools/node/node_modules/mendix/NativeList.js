import{View}from"react-native";import{Component,createElement}from"react";import{FlatList}from"react-navigation";class NativeList extends Component{constructor(){super(...arguments),this.onRefreshHandler=this.onRefresh.bind(this),this.renderItemHandler=this.renderItem.bind(this),this.onEndReachedHandler=this.onEndReached.bind(this)}render(){var _a,_b;return createElement(FlatList,Object.assign({testID:this.props.name,style:this.props.style[0].container,data:null!==(_a=this.props.listValue.items)&&void 0!==_a?_a:[],horizontal:"horizontal"===this.props.scrollDirection,listKey:this.props.id,numColumns:null!==(_b=this.props.numberOfColumns)&&void 0!==_b?_b:1,keyExtractor:NativeList.keyExtractor,renderItem:this.renderItemHandler,onEndReached:this.onEndReachedHandler,refreshing:this.isRefreshing},this.props.onPullDown?{onRefresh:this.onRefreshHandler}:{}))}renderItem({item:item,index:index}){var _a;return createElement(View,{testID:`${this.props.name}$item${index}`,style:[{flex:1/(null!==(_a=this.props.numberOfColumns)&&void 0!==_a?_a:1)},this.props.style[0].listItem]},this.props.itemTemplate(item))}onEndReached(){const listValue=this.props.listValue;"available"===listValue.status&&listValue.hasMoreItems&&listValue.setLimit(listValue.limit+this.props.pageSize)}onRefresh(){this.props.onPullDown&&this.props.onPullDown.canExecute&&this.props.onPullDown.execute()}get isRefreshing(){return this.props.onPullDown&&this.props.onPullDown.canExecute&&this.props.onPullDown.isExecuting||"loading"===this.props.listValue.status}static keyExtractor(item){return item.id}}export{NativeList};
