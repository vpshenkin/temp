import{k as fromComputation$,E as useDependency,F as reaction,G as scheduleAction}from"./2252f97c.js";import{f as fromObjectItem}from"./dc685e13.js";function listItemProperty(getValue$,description){let reactions={};const lastRequestedItems=new Set,[isUpdated,triggerUpdate]=useDependency("Update "+description,()=>{Object.values(reactions).forEach(r=>r.disposer()),reactions={}});return[fromComputation$("Value for "+description,()=>(isUpdated.dependOn(),item=>function(item){let returningData=!0;if(lastRequestedItems.add(item.id),!(item.id in reactions)){const computedValue$=getValue$(fromObjectItem(item)),entry={};entry.disposer=reaction(()=>(returningData||scheduleAction(triggerUpdate),computedValue$.dependOn()),value=>entry.value=value,{fireImmediately:!0}),reactions[item.id]=entry}return returningData=!1,reactions[item.id].value}(item))),function(){Object.keys(reactions).filter(k=>!lastRequestedItems.has(k)).forEach(k=>{reactions[k].disposer(),delete reactions[k]}),lastRequestedItems.clear()}]}export{listItemProperty as l};
